{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Desktop/datamarket-tobigs.github.io/src/views/Faq/FAQItem/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { StyledFAQItem, Question, Wrap, QuestionQMark, QuestionText, Icon, Answer, AnswerText } from './style';\nimport ArrowIcon from '../../../assets/arrow-icon.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FAQItem = ({\n  question,\n  answer\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleOpen = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(StyledFAQItem, {\n    isOpen: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(Question, {\n      onClick: toggleOpen,\n      children: [/*#__PURE__*/_jsxDEV(Wrap, {\n        children: [/*#__PURE__*/_jsxDEV(QuestionQMark, {\n          children: \"Q.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(QuestionText, {\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Icon, {\n        src: ArrowIcon,\n        isOpen: isOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Answer, {\n      isOpen: isOpen,\n      children: answer.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(AnswerText, {\n        children: line\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(FAQItem, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = FAQItem;\nexport default FAQItem;\nvar _c;\n$RefreshReg$(_c, \"FAQItem\");","map":{"version":3,"names":["React","useState","StyledFAQItem","Question","Wrap","QuestionQMark","QuestionText","Icon","Answer","AnswerText","ArrowIcon","jsxDEV","_jsxDEV","FAQItem","question","answer","_s","isOpen","setIsOpen","toggleOpen","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","split","map","line","index","_c","$RefreshReg$"],"sources":["/Users/abc/Desktop/datamarket-tobigs.github.io/src/views/Faq/FAQItem/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  StyledFAQItem,\n  Question,\n  Wrap,\n  QuestionQMark,\n  QuestionText,\n  Icon,\n  Answer,\n  AnswerText\n} from './style';\nimport ArrowIcon from '../../../assets/arrow-icon.svg';\n\nconst FAQItem = ({ question, answer }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  \n  const toggleOpen = () => {\n    setIsOpen(!isOpen);\n  }\n\n  return (\n    <StyledFAQItem isOpen={isOpen}>\n      <Question onClick={toggleOpen}>\n        <Wrap>\n          <QuestionQMark>Q.</QuestionQMark>\n          <QuestionText>{question}</QuestionText>\n        </Wrap>\n        <Icon src={ArrowIcon} isOpen={isOpen} />\n      </Question>\n      <Answer isOpen={isOpen}>\n      {answer.split('\\n').map((line, index) => (\n        <AnswerText key={index}>{line}</AnswerText>\n      ))}\n      </Answer>\n    </StyledFAQItem>\n  );\n}\n\nexport default FAQItem;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,aAAa,EACbC,QAAQ,EACRC,IAAI,EACJC,aAAa,EACbC,YAAY,EACZC,IAAI,EACJC,MAAM,EACNC,UAAU,QACL,SAAS;AAChB,OAAOC,SAAS,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,OAAO,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMkB,UAAU,GAAGA,CAAA,KAAM;IACvBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,oBACEL,OAAA,CAACV,aAAa;IAACe,MAAM,EAAEA,MAAO;IAAAG,QAAA,gBAC5BR,OAAA,CAACT,QAAQ;MAACkB,OAAO,EAAEF,UAAW;MAAAC,QAAA,gBAC5BR,OAAA,CAACR,IAAI;QAAAgB,QAAA,gBACHR,OAAA,CAACP,aAAa;UAAAe,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eACjCb,OAAA,CAACN,YAAY;UAAAc,QAAA,EAAEN;QAAQ;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACPb,OAAA,CAACL,IAAI;QAACmB,GAAG,EAAEhB,SAAU;QAACO,MAAM,EAAEA;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACXb,OAAA,CAACJ,MAAM;MAACS,MAAM,EAAEA,MAAO;MAAAG,QAAA,EACtBL,MAAM,CAACY,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAClClB,OAAA,CAACH,UAAU;QAAAW,QAAA,EAAcS;MAAI,GAAZC,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEpB,CAAC;AAAAT,EAAA,CAvBKH,OAAO;AAAAkB,EAAA,GAAPlB,OAAO;AAyBb,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}