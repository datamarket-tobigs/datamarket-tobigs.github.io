{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import{TopBarContainer,TopBarLeft,TopBarItem}from'./style';import{jsx as _jsx}from\"react/jsx-runtime\";const TopBarItems=[{name:'소개',route:'/'},{name:'커리큘럼&활동',route:'/curriculum'},{name:'모집 안내',route:'/recruit'},{name:'FAQ',route:'/faq'}];const TopBar=_ref=>{let{active}=_ref;const[selectedItem,setSelectedItem]=useState(window.location.pathname);const[isScroll,setIsScroll]=useState(false);useEffect(()=>{const path=window.location.pathname;if(path==='/'){setSelectedItem('/');}else if(path==='/curriculum/'||path==='/curriculum'){setSelectedItem('/curriculum');}else if(path==='/recruit/'||path==='/recruit'){setSelectedItem('/recruit');}else if(path==='/faq/'||path==='/faq'){setSelectedItem('/faq');}},[]);useEffect(()=>{window.addEventListener('scroll',()=>{if(window.scrollY>10){setIsScroll(true);}else{setIsScroll(false);}});},[]);const navigate=useNavigate();function goRoute(route){window.scrollTo(0,0);if(route===selectedItem)return;navigate(route);};return/*#__PURE__*/_jsx(TopBarContainer,{isScroll:isScroll,home:selectedItem==='/',children:/*#__PURE__*/_jsx(TopBarLeft,{children:TopBarItems.map((item,index)=>/*#__PURE__*/_jsx(TopBarItem,{selected:selectedItem===item.route,onClick:()=>goRoute(item.route),children:item.name},index))})});};export default TopBar;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","TopBarContainer","TopBarLeft","TopBarItem","jsx","_jsx","TopBarItems","name","route","TopBar","_ref","active","selectedItem","setSelectedItem","window","location","pathname","isScroll","setIsScroll","path","addEventListener","scrollY","navigate","goRoute","scrollTo","home","children","map","item","index","selected","onClick"],"sources":["/Users/abc/Desktop/datamarket-tobigs.github.io/src/components/TopBar/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { TopBarContainer, TopBarLeft, TopBarItem } from './style';\n\nconst TopBarItems = [\n  {\n    name: '소개',\n    route: '/',\n  },\n  {\n    name: '커리큘럼&활동',\n    route: '/curriculum',\n  },\n  {\n    name: '모집 안내',\n    route: '/recruit',\n  },\n  {\n    name: 'FAQ',\n    route: '/faq',\n  },\n];\n\nconst TopBar = ({ active }) => {\n  const [selectedItem, setSelectedItem] = useState(window.location.pathname);\n  const [isScroll, setIsScroll] = useState(false);\n\n  useEffect(() => {\n    const path = window.location.pathname;\n    if( path === '/') {\n      setSelectedItem('/');\n    } else if (path === '/curriculum/' || path === '/curriculum') {\n      setSelectedItem('/curriculum');\n    } else if (path === '/recruit/' || path === '/recruit') {\n      setSelectedItem('/recruit');\n    } else if (path === '/faq/' || path === '/faq') {\n      setSelectedItem('/faq');\n    }\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('scroll', () => {\n      if (window.scrollY > 10) {\n        setIsScroll(true);\n      } else {\n        setIsScroll(false);\n      }\n    });\n  }, []);\n\n  const navigate = useNavigate();\n  function goRoute(route) {\n    window.scrollTo(0, 0);\n    if (route === selectedItem) return;\n    navigate(route);\n  };\n\n  return (\n    <TopBarContainer isScroll={isScroll} home={selectedItem === '/'} >\n      <TopBarLeft>\n        {TopBarItems.map((item, index) => (\n          <TopBarItem\n            key={index}\n            selected={selectedItem === item.route}\n            onClick={() => goRoute(item.route)}\n          >\n            {item.name}\n          </TopBarItem>\n        ))}\n      </TopBarLeft>\n      { /*\n      <TopBarButton\n        active={active}\n        onClick={() => alert('준비중입니다.')}\n      >\n        지원하기\n      </TopBarButton>\n      */ }\n    </TopBarContainer>\n  );\n}\n\nexport default TopBar;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,eAAe,CAAEC,UAAU,CAAEC,UAAU,KAAQ,SAAS,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElE,KAAM,CAAAC,WAAW,CAAG,CAClB,CACEC,IAAI,CAAE,IAAI,CACVC,KAAK,CAAE,GACT,CAAC,CACD,CACED,IAAI,CAAE,SAAS,CACfC,KAAK,CAAE,aACT,CAAC,CACD,CACED,IAAI,CAAE,OAAO,CACbC,KAAK,CAAE,UACT,CAAC,CACD,CACED,IAAI,CAAE,KAAK,CACXC,KAAK,CAAE,MACT,CAAC,CACF,CAED,KAAM,CAAAC,MAAM,CAAGC,IAAA,EAAgB,IAAf,CAAEC,MAAO,CAAC,CAAAD,IAAA,CACxB,KAAM,CAACE,YAAY,CAAEC,eAAe,CAAC,CAAGd,QAAQ,CAACe,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAAC,CAC1E,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGnB,QAAQ,CAAC,KAAK,CAAC,CAE/CD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAqB,IAAI,CAAGL,MAAM,CAACC,QAAQ,CAACC,QAAQ,CACrC,GAAIG,IAAI,GAAK,GAAG,CAAE,CAChBN,eAAe,CAAC,GAAG,CAAC,CACtB,CAAC,IAAM,IAAIM,IAAI,GAAK,cAAc,EAAIA,IAAI,GAAK,aAAa,CAAE,CAC5DN,eAAe,CAAC,aAAa,CAAC,CAChC,CAAC,IAAM,IAAIM,IAAI,GAAK,WAAW,EAAIA,IAAI,GAAK,UAAU,CAAE,CACtDN,eAAe,CAAC,UAAU,CAAC,CAC7B,CAAC,IAAM,IAAIM,IAAI,GAAK,OAAO,EAAIA,IAAI,GAAK,MAAM,CAAE,CAC9CN,eAAe,CAAC,MAAM,CAAC,CACzB,CACF,CAAC,CAAE,EAAE,CAAC,CAENf,SAAS,CAAC,IAAM,CACdgB,MAAM,CAACM,gBAAgB,CAAC,QAAQ,CAAE,IAAM,CACtC,GAAIN,MAAM,CAACO,OAAO,CAAG,EAAE,CAAE,CACvBH,WAAW,CAAC,IAAI,CAAC,CACnB,CAAC,IAAM,CACLA,WAAW,CAAC,KAAK,CAAC,CACpB,CACF,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAI,QAAQ,CAAGtB,WAAW,CAAC,CAAC,CAC9B,QAAS,CAAAuB,OAAOA,CAACf,KAAK,CAAE,CACtBM,MAAM,CAACU,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAC,CACrB,GAAIhB,KAAK,GAAKI,YAAY,CAAE,OAC5BU,QAAQ,CAACd,KAAK,CAAC,CACjB,CAAC,CAED,mBACEH,IAAA,CAACJ,eAAe,EAACgB,QAAQ,CAAEA,QAAS,CAACQ,IAAI,CAAEb,YAAY,GAAK,GAAI,CAAAc,QAAA,cAC9DrB,IAAA,CAACH,UAAU,EAAAwB,QAAA,CACRpB,WAAW,CAACqB,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,gBAC3BxB,IAAA,CAACF,UAAU,EAET2B,QAAQ,CAAElB,YAAY,GAAKgB,IAAI,CAACpB,KAAM,CACtCuB,OAAO,CAAEA,CAAA,GAAMR,OAAO,CAACK,IAAI,CAACpB,KAAK,CAAE,CAAAkB,QAAA,CAElCE,IAAI,CAACrB,IAAI,EAJLsB,KAKK,CACb,CAAC,CACQ,CAAC,CASE,CAAC,CAEtB,CAAC,CAED,cAAe,CAAApB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}